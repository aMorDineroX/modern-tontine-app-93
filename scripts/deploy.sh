#!/bin/bash

# Script pour d√©ployer l'application
# Utilisation: ./deploy.sh [environnement]
# Exemple: ./deploy.sh production

# Se placer √† la racine du projet
cd "$(dirname "$0")/.."

# D√©terminer l'environnement
ENV=${1:-production}
echo "D√©ploiement vers l'environnement: $ENV"

# Demander confirmation avant de continuer
read -p "√ätes-vous s√ªr de vouloir d√©ployer en $ENV? (y/n) " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "D√©ploiement annul√©."
    exit 1
fi

# V√©rifier si le fichier .env.$ENV existe
if [ ! -f ".env.$ENV" ]; then
    echo "Le fichier .env.$ENV n'existe pas. Veuillez le cr√©er avec les variables d'environnement n√©cessaires."
    exit 1
fi

# Charger les variables d'environnement
source .env.$ENV

# √âtape 1: Ex√©cuter les tests
echo "√âtape 1: Ex√©cution des tests..."
./scripts/run-tests.sh --ci

# V√©rifier si les tests ont r√©ussi
if [ $? -ne 0 ]; then
    echo "‚ùå Les tests ont √©chou√©. D√©ploiement annul√©."
    exit 1
fi

echo "‚úÖ Tests r√©ussis."

# √âtape 2: V√©rifier le code
echo "√âtape 2: V√©rification du code..."
./scripts/code-review.sh --fix

# V√©rifier si la v√©rification du code a r√©ussi
if [ $? -ne 0 ]; then
    echo "‚ö†Ô∏è La v√©rification du code a d√©tect√© des probl√®mes."
    read -p "Voulez-vous continuer malgr√© les probl√®mes? (y/n) " -n 1 -r
    echo
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        echo "D√©ploiement annul√©."
        exit 1
    fi
fi

# √âtape 3: Construire l'application
echo "√âtape 3: Construction de l'application..."
npm run build

# V√©rifier si la construction a r√©ussi
if [ $? -ne 0 ]; then
    echo "‚ùå La construction a √©chou√©. D√©ploiement annul√©."
    exit 1
fi

echo "‚úÖ Construction r√©ussie."

# √âtape 4: D√©ployer les migrations Supabase
echo "√âtape 4: D√©ploiement des migrations Supabase..."
./scripts/deploy-migrations-prod.sh $ENV

# V√©rifier si le d√©ploiement des migrations a r√©ussi
if [ $? -ne 0 ]; then
    echo "‚ùå Le d√©ploiement des migrations a √©chou√©. D√©ploiement annul√©."
    exit 1
fi

echo "‚úÖ Migrations d√©ploy√©es avec succ√®s."

# √âtape 5: D√©ployer l'application
echo "√âtape 5: D√©ploiement de l'application..."

# V√©rifier la m√©thode de d√©ploiement
if [ -n "$DEPLOY_COMMAND" ]; then
    # Utiliser la commande de d√©ploiement sp√©cifi√©e dans .env.$ENV
    eval "$DEPLOY_COMMAND"
elif [ -f "netlify.toml" ]; then
    # D√©ployer sur Netlify
    if ! command -v netlify &> /dev/null; then
        echo "Netlify CLI n'est pas install√©. Installation en cours..."
        npm install -g netlify-cli
    fi
    
    netlify deploy --prod
elif [ -f "vercel.json" ]; then
    # D√©ployer sur Vercel
    if ! command -v vercel &> /dev/null; then
        echo "Vercel CLI n'est pas install√©. Installation en cours..."
        npm install -g vercel
    fi
    
    vercel --prod
else
    echo "‚ùå Aucune m√©thode de d√©ploiement d√©tect√©e. Veuillez sp√©cifier DEPLOY_COMMAND dans .env.$ENV."
    exit 1
fi

# V√©rifier si le d√©ploiement a r√©ussi
if [ $? -ne 0 ]; then
    echo "‚ùå Le d√©ploiement a √©chou√©."
    exit 1
fi

echo "‚úÖ Application d√©ploy√©e avec succ√®s."

# √âtape 6: V√©rifier l'application d√©ploy√©e
echo "√âtape 6: V√©rification de l'application d√©ploy√©e..."

if [ -n "$DEPLOYED_URL" ]; then
    # V√©rifier si l'application est accessible
    if curl -s "$DEPLOYED_URL" > /dev/null; then
        echo "‚úÖ L'application est accessible √† l'URL $DEPLOYED_URL."
        
        # V√©rifier les performances
        echo "V√©rification des performances..."
        ./scripts/monitor-performance.sh --url="$DEPLOYED_URL" --device=desktop --runs=1
        
        # V√©rifier l'accessibilit√©
        echo "V√©rification de l'accessibilit√©..."
        ./scripts/check-accessibility.sh --url="$DEPLOYED_URL"
    else
        echo "‚ö†Ô∏è L'application n'est pas accessible √† l'URL $DEPLOYED_URL."
    fi
else
    echo "‚ö†Ô∏è URL de d√©ploiement non sp√©cifi√©e. Veuillez d√©finir DEPLOYED_URL dans .env.$ENV pour activer les v√©rifications post-d√©ploiement."
fi

echo "üéâ D√©ploiement termin√© avec succ√®s!"
